geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "D")+
geom_text(data=new.root.shannon.summarized,aes(x=Rootstock,y=0.01+max.Shannon,label=new.root.shannon.summarized$groups),vjust=0) +
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.9),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=10),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
grid.newpage()
grid.draw(rbind(ggplotGrob(bac_rich_root), ggplotGrob(bac_sha_root),size = "first"))
map_aov
# 1. Compare richness among site
AovITS_richness_site <- lm(fg.Richness ~ Site , data=map_aov, na.action=na.exclude)
drop1(AovITS_richness_site,~.,test="F") # type III SS and F Tests
summary(AovITS_richness_site)
ITSRichness_site_resids <- residuals(AovITS_richness_site)
ITSRichness_site_resids
ITSRichness_site_preds <- predict(AovITS_richness_site)
plot(ITSRichness_site_resids ~ ITSRichness_site_preds, xlab = "Predicted Values", ylab = "Residuals", asp=.5)
#plot a line on X-axis for comparison. a=intercept,b=slope,h=yvalue,v=xvalue.
abline(a=0,h=0,b=0)
# test for homogeneity of variance
#levene test was used here, the null hypothesis is all variances are equal,
# p-val < 0.05 means all variances are not equal, thus parametric tests such as ANOVA are not suited.
leveneTest(fg.Richness ~ Site, data=map_aov, na.action=na.exclude) # GOOD p-val>0.05, the data is homogen
#Test for normality
shapiro.test(ITSRichness_site_resids) # GOOD p-val>0.05, the data are normally distributed
qqnorm(ITSRichness_site_resids)
qqline(ITSRichness_site_resids)
# Do Tukey's HSD Post Hoc Test
hsdITS_Richness_site <- HSD.test(AovITS_richness_site, "Site", alpha = 0.05,group = FALSE,main = NULL,console=TRUE)
hsdITS_Richness_site <- HSD.test(AovITS_richness_site, "Site", alpha = 0.05,group = T ,main = NULL,console=TRUE)
# Do Plot
# add significance letters from HSD.test into box plot
ITSsite_richness.summarized <- map.divITS %>% group_by(Site) %>% summarize(max.Richness=max(Richness))
hsdITS_Richness_site <- HSD.test(AovITS_richness_site, "Site", group = TRUE, console = TRUE)
hsdITS_Richness = hsdITS_Richness_site$groups
class(hsdITS_Richness)
hsdITS_Richness$Site <- rownames(hsdITS_Richness)
new.ITSsite.richness.summarized=left_join(hsdITS_Richness,ITSsite_richness.summarized, by='Site')
map.div
# Do Plot
# add significance letters from HSD.test into box plot
ITSsite_richness.summarized <- map.div %>% group_by(Site) %>% summarize(max.Richness=max(fg.Richness))
hsdITS_Richness_site <- HSD.test(AovITS_richness_site, "Site", group = TRUE, console = TRUE)
hsdITS_Richness = hsdITS_Richness_site$groups
class(hsdITS_Richness)
hsdITS_Richness$Site <- rownames(hsdITS_Richness)
new.ITSsite.richness.summarized=left_join(hsdITS_Richness,ITSsite_richness.summarized, by='Site')
(fg_rich_site <- ggplot(map.div, aes(x=Site, y=fg.Richness))+
geom_boxplot() +
geom_point() +
scale_x_discrete(limits=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)) +
theme_bw()+
labs(title = "A")+
geom_text(data=new.ITSsite.richness.summarized,aes(x=Site,y=10+max.Richness,label=new.ITSsite.richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 14),
strip.text.x = element_blank(),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_blank(),
axis.title.y = element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
(fg_rich_site <- ggplot(map.div, aes(x=Site, y=fg.Richness))+
geom_boxplot() +
geom_point() +
scale_x_discrete(limits=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)) +
theme_bw()+
labs(title = "A", ylab="Richness")+
geom_text(data=new.ITSsite.richness.summarized,aes(x=Site,y=10+max.Richness,label=new.ITSsite.richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 14),
strip.text.x = element_blank(),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_blank(),
axis.title.y = element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
# 2. Compare richness among rootstocks
AovITS_richness_rootstock <- lm(fg.Richness ~ Rootstock , data=map_aov, na.action=na.exclude)
drop1(AovITS_richness_rootstock,~.,test="F") # type III SS and F Tests
summary(AovITS_richness_rootstock)
ITSRichness_root_resids <- residuals(AovITS_richness_rootstock)
ITSRichness_root_resids
ITSRichness_root_preds <- predict(AovITS_richness_rootstock)
plot(ITSRichness_root_resids ~ ITSRichness_root_preds, xlab = "Predicted Values", ylab = "Residuals", asp=.5)
# test for homogeneity of variance
#levene test was used here, the null hypothesis is all variances are equal,
# p-val < 0.05 means all variances are not equal, thus parametric tests such as ANOVA are not suited.
leveneTest(fg.Richness ~ Rootstock, data=map_aov, na.action=na.exclude) #p-val > 0.05, the data is homogen
#Test for normality
shapiro.test(ITSRichness_root_resids) ## p-val>0.05, the data are normally distributed
#Test for normality
shapiro.test(ITSRichness_root_resids) ## p-val>0.05, the data are normally distributed
qqnorm(ITSRichness_root_resids)
qqline(ITSRichness_root_resids)
hsdITS_Richness_rootstock <- HSD.test(AovITS_richness_rootstock, "Rootstock", alpha = 0.05,group = TRUE,main = NULL,console=TRUE)
hsdITS_Richness_rootstock <- HSD.test(AovITS_richness_rootstock, "Rootstock", alpha = 0.05,group = F,main = NULL,console=TRUE)
# Do Plot
ITSroot_richness.summarized <- map.div %>% group_by(Rootstock) %>% summarize(max.Richness=max(fg.Richness))
hsdITS_Richness_rootstock <- HSD.test(AovITS_richness_rootstock, "Rootstock", group = TRUE, console = TRUE)
hsdITS_Richness = hsdITS_Richness_rootstock$groups
class(hsdITS_Richness)
hsdITS_Richness$Rootstock <- rownames(hsdITS_Richness)
hsdITS_Richness = mutate(hsdITS_Richness, Rootstock = factor(Rootstock, levels=unique(Rootstock)))
new.ITSroot_richness.summarized=left_join(hsdITS_Richness,ITSroot_richness.summarized, by='Rootstock')
(fung_rich_root <- ggplot(map.divITS, aes(x=Rootstock, y=Richness))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "C", y="Richness")
geom_text(data=new.ITSroot_richness.summarized,aes(x=Rootstock,y=10+max.Richness,label=new.ITSroot_richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.8),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=13),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
(fung_rich_root <- ggplot(map.divITS, aes(x=Rootstock, y=Richness))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "C", y="Richness")+
geom_text(data=new.ITSroot_richness.summarized,aes(x=Rootstock,y=10+max.Richness,label=new.ITSroot_richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.8),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=13),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
(fung_rich_root <- ggplot(map.divITS, aes(x=Rootstock, y=Richness))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "C", y="Richness")+
geom_text(data=new.ITSroot_richness.summarized,aes(x=Rootstock,y=10+max.Richness,label=new.ITSroot_richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.9),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=10),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
# 3. Compare Shannon index among sites
AovITS_shannon_site <- lm(fg.Shannon ~ Site , data=map_aov, na.action=na.exclude)
drop1(AovITS_shannon_site,~.,test="F") # type III SS and F Tests
summary(AovITS_shannon_site)
ITSShannon_site_resids <- residuals(AovITS_shannon_site)
ITSShannon_site_resids
ITSShannon_site_preds <- predict(AovITS_shannon_site)
plot(ITSShannon_site_resids ~ ITSShannon_site_preds , xlab = "Predicted Values", ylab = "Residuals", asp=.5)
#plot a line on X-axis for comparison. a=intercept,b=slope,h=yvalue,v=xvalue.
abline(a=0,h=0,b=0)
# test for homogeneity of variance
#levene test was used here, the null hypothesis is all variances are equal,
# p-val < 0.05 means all variances are not equal, thus parametric tests such as ANOVA are not suited.
leveneTest(fg.Shannon ~ Site, data=map_aov, na.action=na.exclude) #p-val > 0.05, the data is homogen
#Test for normality
shapiro.test(ITSShannon_site_resids) ## p-val>0.05, the data are normally distributed
qqnorm(ITSShannon_site_resids)
qqline(ITSShannon_site_resids)
# Do Tukey's HSD Post Hoc Test
hsdITS_Shannon_site <- HSD.test(AovITS_shannon_site, "Site", alpha = 0.05,group = T ,main = NULL,console=TRUE)
hsdITS_Shannon_site <- HSD.test(AovITS_shannon_site, "Site",alpha = 0.05, group = FALSE, main = NULL,console=TRUE)
# Do Tukey's HSD Post Hoc Test
hsdITS_Shannon_site <- HSD.test(AovITS_shannon_site, "Site", alpha = 0.05,group = T ,main = NULL,console=TRUE)
# Do Plot
# add significance letters from HSD.test into box plot
ITSsite_shannon.summarized <- map.div %>% group_by(Site) %>% summarize(max.Shannon=max(fg.Shannon))
hsdITS_Shannon_site <- HSD.test(AovITS_shannon_site, "Site", group = TRUE, console = TRUE)
hsdITS_Shannon = hsdITS_Shannon_site$groups
class(hsdITS_Shannon)
hsdITS_Shannon$Site <- rownames(hsdITS_Shannon)
new.ITSsite.shannon.summarized=left_join(hsdITS_Shannon,ITSsite_shannon.summarized, by='Site')
(fung_sha_site <- ggplot(map.div, aes(x=Site, y=fg.Shannon))+
geom_boxplot() +
geom_point() +
scale_x_discrete(limits=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)) +
theme_bw()+
labs(title = "B", y="Shannon")+
geom_text(data=new.ITSsite.shannon.summarized,aes(x=Site,y=0.03+max.Shannon,label=new.ITSsite.shannon.summarized$groups),vjust=0) +
theme(axis.text.x=element_text(size=15),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=18,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title=element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
# 4. Compare Shannon index among rootstocks
AovITS_shannon_rootstock <- lm(fg.Shannon ~ Rootstock , data=map_aov, na.action=na.exclude)
drop1(AovITS_shannon_rootstock,~.,test="F") # type III SS and F Tests
summary(AovITS_shannon_rootstock)
ITSShannon_root_resids <- residuals(AovITS_shannon_rootstock)
ITSShannon_root_resids
ITSShannon_root_preds <- predict(AovITS_shannon_rootstock)
plot(ITSShannon_root_resids ~ ITSShannon_root_preds , xlab = "Predicted Values", ylab = "Residuals", asp=.5)
#plot a line on X-axis for comparison. a=intercept,b=slope,h=yvalue,v=xvalue.
abline(a=0,h=0,b=0)
# test for homogeneity of variance
#levene test was used here, the null hypothesis is all variances are equal,
# p-val < 0.05 means all variances are not equal, thus parametric tests such as ANOVA are not suited.
leveneTest(fg.Shannon ~ Rootstock , data=map_aov, na.action=na.exclude) #p-val > 0.05, the data is homogen
#Test for normality
shapiro.test(ITSShannon_root_resids) ## p-val>0.05, the data are normally distributed
qqnorm(ITSShannon_root_resids)
qqline(ITSShannon_root_resids)
# Do Tukey's HSD Post Hoc Test
hsdITS_sha_root <- HSD.test(AovITS_shannon_rootstock, "Rootstock", alpha = 0.05,group = TRUE,main = NULL,console=TRUE)
hsdITS_sha_root <- HSD.test(AovITS_shannon_rootstock, "Rootstock", alpha = 0.05,group = F,main = NULL,console=TRUE)
# Do Tukey's HSD Post Hoc Test
hsdITS_sha_root <- HSD.test(AovITS_shannon_rootstock, "Rootstock", alpha = 0.05,group = TRUE,main = NULL,console=TRUE)
# Do Plot
# add significance letters from HSD.test into box plot
ITSroot_shannon.summarized <- map.div %>% group_by(Rootstocks) %>% summarize(max.Shannon=max(fg.Shannon))
# Do Plot
# add significance letters from HSD.test into box plot
ITSroot_shannon.summarized <- map.div %>% group_by(rootstocks) %>% summarize(max.Shannon=max(fg.Shannon))
map.div
# Do Plot
# add significance letters from HSD.test into box plot
ITSroot_shannon.summarized <- map.div %>% group_by(rootstock) %>% summarize(max.Shannon=max(fg.Shannon))
hsdITS_sha_root <- HSD.test(AovITS_shannon_rootstock, "Rootstocks", group = TRUE, console = TRUE)
# Do Plot
# add significance letters from HSD.test into box plot
ITSroot_richness.summarized <- map.div %>% group_by(Rootstock) %>% summarize(max.Richness=max(fg.Richness))
# Do Plot
# add significance letters from HSD.test into box plot
ITSroot_shannon.summarized <- map.div %>% group_by(Rootstock) %>% summarize(max.Shannon=max(fg.Shannon))
# Do Plot
# add significance letters from HSD.test into box plot
ITSroot_shannon.summarized <- map.div %>% group_by(Rootstock) %>% summarize(max.Shannon=max(fg.Shannon))
hsdITS_sha_root <- HSD.test(AovITS_shannon_rootstock, "Rootstock", group = TRUE, console = TRUE)
hsdITS_Shanon_root = hsdITS_sha_root$groups
class(hsdITS_Shanon_root)
hsdITS_Shanon_root$Rootstock <- rownames(hsdITS_Shanon_root)
new.ITSroot.shannon.summarized=left_join(hsdITS_Shanon_root,ITSroot_shannon.summarized, by='Rootstock')
(fung_sha_root <- ggplot(map.div, aes(x=Rootstock, y=fg.Shannon))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "D", y="Shannon")+
geom_text(data=new.ITSroot.shannon.summarized,aes(x=Rootstock,y=0.03+max.Shannon,label=new.ITSroot.shannon.summarized$groups),vjust=0) +
theme(axis.text.x=element_text(size=15),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=18,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title=element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
(fung_sha_root <- ggplot(map.div, aes(x=Rootstock, y=fg.Shannon))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "D", y="Shannon")+
geom_text(data=new.ITSroot.shannon.summarized,aes(x=Rootstock,y=0.03+max.Shannon,label=new.ITSroot.shannon.summarized$groups),vjust=0) +
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.9),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=10),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
dev.off()
dev.set(dev.next())
grid.newpage()
(fg_rich_root <- ggplot(map.divITS, aes(x=Rootstock, y=Richness))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "C", y="Richness")+
geom_text(data=new.ITSroot_richness.summarized,aes(x=Rootstock,y=10+max.Richness,label=new.ITSroot_richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.9),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=10),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
(fg_sha_site <- ggplot(map.div, aes(x=Site, y=fg.Shannon))+
geom_boxplot() +
geom_point() +
scale_x_discrete(limits=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)) +
theme_bw()+
labs(title = "B", y="Shannon")+
geom_text(data=new.ITSsite.shannon.summarized,aes(x=Site,y=0.03+max.Shannon,label=new.ITSsite.shannon.summarized$groups),vjust=0) +
theme(axis.text.x=element_text(size=15),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=18,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title=element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
(fg_sha_root <- ggplot(map.div, aes(x=Rootstock, y=fg.Shannon))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "D", y="Shannon")+
geom_text(data=new.ITSroot.shannon.summarized,aes(x=Rootstock,y=0.03+max.Shannon,label=new.ITSroot.shannon.summarized$groups),vjust=0) +
theme(axis.text.x=element_text(size=14,angle=49,hjust =0.9),
axis.text.y = element_text(size = 14),
strip.text.x = element_text(size=20,colour = "black", face = "bold"),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_text(vjust=10),
axis.title=element_text(size=18,face="bold", vjust = 10),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
grid.newpage()
grid.draw(rbind(ggplotGrob(fg_rich_site), ggplotGrob(fg_sha_site),size = "first"))
(fg_rich_site <- ggplot(map.div, aes(x=Site, y=fg.Richness))+
geom_boxplot() +
geom_point() +
scale_x_discrete(limits=c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)) +
theme_bw()+
labs(title = "A", y="Richness")+
geom_text(data=new.ITSsite.richness.summarized,aes(x=Site,y=10+max.Richness,label=new.ITSsite.richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 14),
strip.text.x = element_blank(),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_blank(),
axis.title.y = element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
grid.newpage()
grid.draw(rbind(ggplotGrob(fg_rich_site), ggplotGrob(fg_sha_site),size = "first"))
grid.draw(rbind(ggplotGrob(fg_rich_root), ggplotGrob(fg_sha_root),size = "first"))
grid.newpage()
grid.draw(rbind(ggplotGrob(fg_rich_root), ggplotGrob(fg_sha_root),size = "first"))
(fg_rich_root <- ggplot(map.divITS, aes(x=Rootstock, y=Richness))+
geom_boxplot() +
geom_point() +
theme_bw()+
labs(title = "C", y="Richness")+
geom_text(data=new.ITSroot_richness.summarized,aes(x=Rootstock,y=10+max.Richness,label=new.ITSroot_richness.summarized$groups),vjust=0)+
theme(axis.text.x=element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(size = 14),
strip.text.x = element_blank(),
strip.text.y = element_text(size=18, face = 'bold'),
plot.title = element_text(size = rel(2)),
axis.title.x = element_blank(),
axis.title.y = element_text(size=18,face="bold"),
plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()))
grid.newpage()
grid.draw(rbind(ggplotGrob(fg_rich_root), ggplotGrob(fg_sha_root),size = "first"))
# Install packages
install.packages(c('vegan', 'tidyverse'))
install.packages('reshape')
install.packages("dplyr")
install.packages("ggpubr")
install.packages("car")
install.packages("agricolae")
install.packages("multcompView")
install.packages("gridExtra")
install.packages("ggplot2")
install.packages("sjmisc")
install.packages("sjPlot")
install.packages("MASS")
install.packages("FSA")
install.packages("rcompanion")
install.packages("onewaytests")
install.packages("PerformanceAnalytics")
install.packages("gvlma")
install.packages("userfriendlyscience")
install.packages("ggpmisc")
install.packages("fitdistrplus")
install.packages('BiocManager')
install.packages("dplyr")
library(BiocManager)
library(vegan)
library(tidyverse)
library(plyr)
library(dplyr)
library(tidyr)
#library(cowplot)
library(ggplot2)
library(reshape)
library(ggpubr)
library(car)
library(agricolae)
library(multcompView)
library(grid)
library(gridExtra)
library(sjmisc)
library(sjPlot)
library(MASS)
library(FSA)
library(rcompanion)
library(onewaytests)
library(ggsignif)
library(PerformanceAnalytics)
library(gvlma)
library(userfriendlyscience)
library(ggpmisc)
library(tibble)
library(fitdistrplus)
install.packages("ggplot2")
install.packages("BiocManager")
install.packages("dplyr")
install.packages("BiocManager")
install.packages("dplyr")
# Set the working directory
setwd('/Users/arifinabintarti/Documents/PAPER/PAPER_Bintarti_2019_Apple/')
wd <- print(getwd())
############################################################################################
######################### BACTERIAL AND FUNGAL COMMUNITIES COMPOSITION #####################
############################################################################################
BiocManager::install("phyloseq")
library(phyloseq)
# 2. FUNGAL COMPOSITION
# READ TAXONOMY FILE ("consensus_taxonomy_ITS.txt") FROM CONSTAX OUTPUT AND MERGE IT INTO "otuITS" FILE ("OTU_rarefied_ITS.txt")
otuITS <- read.table(file = "OTU_rarefied_ITS.txt", sep='\t', header=T)
fg.taxonomy = read.table("consensus_taxonomy_ITS.txt",
header = T, sep = "\t")
dim(fg.taxonomy)
fg.otu.tax <- merge(otuITS, fg.taxonomy, by.x =c("OTU_ID"), by.y = c("OTU_ID"))
head(fg.otu.tax)
dim(fg.otu.tax)
# write.table(fg.otu.tax, file = "combined_otu_tax_ITS.txt", sep = '\t', col.names = TRUE, row.names = FALSE)
# go to excel and separate the "combined_otu_tax_ITS.txt" into 2 files: OTU_ITS.csv and ITS_TAX.csv for uploading to phyloseq
# READ OTU_TABLE
otuITS.phyl = read.csv("OTU_ITS.csv", sep=",", row.names=1)
otuITS.phyl = as.matrix(otuITS.phyl)
dim(otuITS.phyl)
head(sort(colSums(otuITS.phyl, na.rm = FALSE, dims = 1), decreasing = FALSE))
head(sort(rowSums(otuITS.phyl, na.rm = FALSE, dims = 1), decreasing = FALSE))
# read fungal taxonomy
tax.ITS = read.csv("ITS_TAX.csv", sep=",", row.names=1)
tax.ITS = as.matrix(tax.ITS)
dim(tax.ITS)
tax.ITS
head(OTU.ITS)
head(otuITS.phyl)
# make phyloseq map
phyloseq_map <- sample_data(map)
# add map
map$Site<-as.factor(map$Site)
# Read the metadata (map)
map <- read.table('clean_map_data.csv', sep=',', header=TRUE)
str(map) # We use number as the name of site and it is integer
map$Site <- as.factor(map$Site) # I want to change site as factor
colnames(map)[which(names(map) == "rootstock")] <- "Rootstock"
colnames(map)[which(names(map) == "cultivar")] <- "Scion"
# add map
map$Site<-as.factor(map$Site)
rownames(map) <- map$sample_code
head(map)
# make phyloseq map
phyloseq_map <- sample_data(map)
# check that your OTU names are consistent across objects
taxa_names(TAX.ITS)
# IMPORT fungal otu table, taxonomy, and map files into phyloseq object
OTU.ITS <- otu_table(otuITS.phyl, taxa_are_rows = TRUE)
OTU.ITS
TAX.ITS <-  tax_table(tax.ITS)
TAX.ITS
# add map
map$Site<-as.factor(map$Site)
rownames(map) <- map$sample_code
head(map)
# make phyloseq map
phyloseq_map <- sample_data(map)
# check that your OTU names are consistent across objects
taxa_names(TAX.ITS)
taxa_names(OTU.ITS)
# merge into one phyloseq object
PHYL_ITS <- phyloseq(OTU.ITS,TAX.ITS,phyloseq_map)
map
